---
- name: Install Java and Net-tools
  hosts: terraformserver
  become: yes
  become_user: root

  tasks:
  - name: Update dnf repo and cache
    ansible.builtin.dnf:
      update_cache: yes
  - name: Install Java 8
    ansible.builtin.dnf:
      name: java-17-amazon-corretto.x86_64
  - name: Install Net-tools
    ansible.builtin.dnf:
      name: net-tools

- name: Download and Unpack Nexus Installer
  hosts: terraformserver
  become: yes
  become_user: root
  tasks:
  - name: Check Nexus folder state
    ansible.builtin.stat:
      path: /opt/nexus
    register: stat_result
  - name: Download Nexus
    ansible.builtin.get_url:
      url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
      dest: /opt/
    register: download_result
  - name: Unpack Nexus tar
    ansible.builtin.unarchive:
      src: "{{download_result.dest}}"
      dest: /opt/
      remote_src: yes
    when: not stat_result.stat.exists
  - name: Find Nexus folder
    ansible.builtin.find:
      paths: /opt
      pattern: "nexus-*"
      file_type: directory
    register: find_result
  - name: Rename Nexus folder
    ansible.builtin.shell:
      cmd: mv {{find_result.files[0].path}} /opt/nexus
    when: not stat_result.stat.exists

- name: Create Nexus user to own Nexus folders

  hosts: terraformserver
  become: yes
  become_user: root

  tasks:
  - name: Ensure group nexus exists
    ansible.builtin.group:
      name: nexus
      state: present
  - name: Create user nexus
    ansible.builtin.user:
      name: nexus
      group: nexus
  - name: Make nexus user owner of nexus folder
    ansible.builtin.file:
      path: /opt/nexus
      state: directory
      owner: nexus
      group: nexus
      recurse: yes
  - name: Make nexus user owner of sonatype folder
    ansible.builtin.file:
      path: /opt/sonatype-work
      state: directory
      owner: nexus
      group: nexus
      recurse: yes

- name: Start Nexus with nexus user
  hosts: terraformserver
  become: yes
  become_user: root
  remote_user: nexus

  tasks:
  - name: Set run_as_user nexus
    ansible.builtin.blockinfile: # Or use lineinfile module
      path: /opt/nexus/bin/nexus.rc
      block: |
        run_as_user="nexus"
  - name: Start nexus
    ansible.builtin.command:
      cmd: /opt/nexus/bin/nexus start
      
- name: Verify Nexus is up and running
  hosts: terraformserver
  tasks:
  - name: Check with ps
    ansible.builtin.shell:
      cmd: ps aux | grep nexus
    register: app_status
  - ansible.builtin.debug: msg={{app_status.stdout_lines}}
  - name: Wait for one minute
    ansible.builtin.pause:
      minutes: 1      
  - name: Check with Netstat
    ansible.builtin.shell:
      cmd: netstat -plnt
    register: app_status
  - ansible.builtin.debug: msg={{app_status.stdout_lines}}